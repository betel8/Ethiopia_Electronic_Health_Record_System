{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nconst Warning = callback => {\n  _s();\n  function Validate(values) {\n    let errors = {};\n    if (!values.firstName) {\n      errors.first = 'First Name is required';\n    }\n    if (!values.lastName) {\n      errors.lastName = 'lastName is required';\n    }\n    if (!values.cellPhone1) {\n      errors.cellphone = 'Cell Phone value i1s required';\n    }\n    if (!values.city) {\n      errors.city = 'City is required';\n    }\n    if (!values.subcity) {\n      errors.subCity = 'Sub City is required';\n    }\n    if (!values.woreda) {\n      errors.woreda = 'Woreda is required';\n    }\n    if (!values.birthPlace) {\n      errors.birthPlace = 'Birth Place is required';\n    }\n    if (!values.dateOfBirth) {\n      errors.dob = 'Date Of Birth is required';\n    }\n    if (!values.email) {\n      errors.email = 'Email address is required';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\n      errors.email = 'Email address is invalid';\n    }\n    if (!values.password) {\n      errors.password = 'Password is required';\n    } else if (values.password.length < 8) {\n      errors.password = 'Password must be 8 or more characters';\n    }\n    if (!values.university) {\n      errors.university = 'University Name is required';\n    }\n    if (!values.cgpa) {\n      errors.cgpa = 'CGPA is required';\n    }\n    if (!values.graduationYear) {\n      errors.graduationYear = 'Year of graduation is required';\n    }\n    if (!values.language) {\n      errors.language = 'Language is required';\n    }\n    return errors;\n  }\n  ;\n  const [values, setValues] = useState({});\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback();\n    }\n  }, [errors]);\n  const handleSubmit = event => {\n    if (event) event.preventDefault();\n    setErrors(Validate(values));\n    setIsSubmitting(true);\n  };\n  const handleInputChange = event => {\n    event.persist();\n    setValues(values => ({\n      ...values,\n      [event.target.name]: event.target.value\n    }));\n  };\n  return {\n    handleInputChange,\n    handleSubmit,\n    values,\n    errors\n  };\n};\n_s(Warning, \"fN8x5Yp0b2dZEBXkEth9Ky/Ylmk=\");\n_c = Warning;\nexport default Warning;\nvar _c;\n$RefreshReg$(_c, \"Warning\");","map":{"version":3,"names":["useState","useEffect","Warning","callback","_s","Validate","values","errors","firstName","first","lastName","cellPhone1","cellphone","city","subcity","subCity","woreda","birthPlace","dateOfBirth","dob","email","test","password","length","university","cgpa","graduationYear","language","setValues","setErrors","isSubmitting","setIsSubmitting","Object","keys","handleSubmit","event","preventDefault","handleInputChange","persist","target","name","value","_c","$RefreshReg$"],"sources":["C:/Ethiopia_Electronic_Health_Record_System/front_end/src/Add_User/warning.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst Warning = (callback) => {\r\n  function Validate(values){\r\n    let errors = {};\r\n    if (!values.firstName) {\r\n      errors.first = 'First Name is required';\r\n    } \r\n    if (!values.lastName) {\r\n      errors.lastName = 'lastName is required';\r\n    } \r\n    if (!values.cellPhone1) {\r\n      errors.cellphone = 'Cell Phone value i1s required';\r\n    } \r\n    if (!values.city) {\r\n      errors.city = 'City is required';\r\n    } \r\n    if (!values.subcity) {\r\n      errors.subCity = 'Sub City is required';\r\n    } \r\n    if (!values.woreda) {\r\n      errors.woreda = 'Woreda is required';\r\n    } \r\n    if (!values.birthPlace) {\r\n      errors.birthPlace = 'Birth Place is required';\r\n    } \r\n    if (!values.dateOfBirth) {\r\n      errors.dob = 'Date Of Birth is required';\r\n    } \r\n    if (!values.email) {\r\n      errors.email = 'Email address is required';\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\r\n      errors.email = 'Email address is invalid';\r\n    }\r\n    if (!values.password) {\r\n      errors.password = 'Password is required';\r\n    } else if (values.password.length < 8) {\r\n      errors.password = 'Password must be 8 or more characters';\r\n    }\r\n    if (!values.university) {\r\n      errors.university = 'University Name is required';\r\n    } \r\n    if (!values.cgpa) {\r\n      errors.cgpa = 'CGPA is required';\r\n    } \r\n    if (!values.graduationYear) {\r\n      errors.graduationYear = 'Year of graduation is required';\r\n    } \r\n    if (!values.language) {\r\n      errors.language = 'Language is required';\r\n    } \r\n    return errors;\r\n  }; \r\n  \r\n  \r\n  const [values, setValues] = useState({});\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      callback();\r\n    }\r\n  }, [errors]);\r\n\r\n  const handleSubmit = (event) => {\r\n    if (event) event.preventDefault();\r\n      setErrors(Validate(values));\r\n      setIsSubmitting(true);\r\n      \r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    event.persist();\r\n    setValues((values) => ({ ...values, [event.target.name]: event.target.value }));\r\n  };\r\n\r\n  return {\r\n    handleInputChange,\r\n    handleSubmit,\r\n    values,\r\n    errors,\r\n  }\r\n};\r\n\r\nexport default Warning"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}