{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nconst Warning = callback => {\n  _s();\n  let values = [{}];\n  const [SERVER_URL, setServerUrl] = useState(\"http://localhost:8080/\");\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const Validate = (value, name, validationStandard, required) => {\n    if (!value && required) {\n      setErrors({\n        ...errors,\n        [name]: \" is required\"\n      });\n      return;\n    } else {\n      if (validationStandard === \"name\") {\n        var notName = value.match(/\\d+/g);\n        if (notName !== null) {\n          setErrors({\n            errors,\n            [name]: \" can not include a number\"\n          });\n        } else {\n          setErrors({\n            ...errors,\n            [name]: false\n          });\n        }\n      } else if (validationStandard === \"phone\") {\n        var notPhone = value.match(/\\D/g);\n        if (notPhone !== null) {\n          setErrors({\n            errors,\n            [name]: \" can not include character\"\n          });\n        } else {\n          setErrors({\n            ...errors,\n            [name]: false\n          });\n        }\n      } else {\n        setErrors({\n          ...errors,\n          [name]: false\n        });\n      }\n    }\n  };\n  const addUser = user => {\n    fetch(SERVER_URL + 'api/doctors', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(user)\n    }).then(response => {\n      if (response.ok) {\n        alert('all ok');\n      } else {\n        alert('something is worng ');\n      }\n    }).catch(err => alert(err));\n  };\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback();\n    }\n  }, [errors]);\n  const handleSubmit = event => {\n    if (event) event.preventDefault();\n    const kvArray = [{\n      key: 1,\n      value: 10\n    }, {\n      key: 2,\n      value: 20\n    }, {\n      key: 3,\n      value: 30\n    }];\n    const reformattedArray = values.map(_ref => {\n      let {\n        name,\n        value\n      } = _ref;\n      return {\n        [name]: value\n      };\n    });\n    // addUser(values);\n  };\n\n  const handler = (event, type, required, validationType) => {\n    if (event) {\n      if (type === 'onBlur') {\n        event.persist();\n        Validate(event.target.value, event.target.name, validationType, required);\n      } else if (type === \"onChange\") {\n        event.persist();\n        Validate(event.target.value, event.target.name, validationType, required);\n        values.push({\n          \"name\": event.target.name,\n          \"value\": event.target.value,\n          \"required\": required\n        });\n      }\n    } else {\n      values.push({\n        \"name\": type,\n        \"value\": \"\"\n      });\n    }\n  };\n  return {\n    handler,\n    handleSubmit,\n    values,\n    errors\n  };\n};\n_s(Warning, \"DdF8mwwY3NczedjI1Di/lIGivA0=\");\n_c = Warning;\nexport default Warning;\nvar _c;\n$RefreshReg$(_c, \"Warning\");","map":{"version":3,"names":["useState","useEffect","Warning","callback","_s","values","SERVER_URL","setServerUrl","errors","setErrors","isSubmitting","setIsSubmitting","Validate","value","name","validationStandard","required","notName","match","notPhone","addUser","user","fetch","method","headers","body","JSON","stringify","then","response","ok","alert","catch","err","Object","keys","length","handleSubmit","event","preventDefault","kvArray","key","reformattedArray","map","_ref","handler","type","validationType","persist","target","push","_c","$RefreshReg$"],"sources":["C:/Ethiopia_Electronic_Health_Record_System/front_end/src/Add_User/warning.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst Warning = (callback) => {\r\n\r\n  let values=[{}];\r\n  const [SERVER_URL,setServerUrl]=useState(\"http://localhost:8080/\");\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const  Validate=(value,name,validationStandard,required)=>{\r\n    if(!value&&required){\r\n      setErrors({...errors,[name]:\" is required\"})\r\n      return\r\n    }else{\r\n      if(validationStandard===\"name\"){\r\n          var notName=value.match(/\\d+/g);\r\n          if(notName!==null){\r\n            setErrors({errors,[name]:\" can not include a number\"})\r\n          }else{\r\n            setErrors({...errors,[name]:false})\r\n          }\r\n      }else if(validationStandard===\"phone\"){\r\n          var notPhone=value.match(/\\D/g)\r\n          if(notPhone!==null){\r\n            setErrors({errors,[name]:\" can not include character\"})\r\n          }else{\r\n            setErrors({...errors,[name]:false})\r\n          }\r\n      }else{\r\n        setErrors({...errors,[name]:false})\r\n      }\r\n    }\r\n  };\r\n  const addUser=(user)=>{\r\n    fetch(SERVER_URL+'api/doctors',{\r\n      method:'POST',\r\n      headers:{'Content-Type':'application/json'},\r\n      body: JSON.stringify(user)\r\n    }).then(response=>{\r\n      if(response.ok){\r\n        alert('all ok')\r\n      }else{\r\n        alert('something is worng ')\r\n      }\r\n    }).catch(err=>alert(err))\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      callback();\r\n    }\r\n  }, [errors]);\r\n\r\n  const handleSubmit = (event) => {\r\n    if (event) event.preventDefault();\r\n    const kvArray = [\r\n      { key: 1, value: 10 },\r\n      { key: 2, value: 20 },\r\n      { key: 3, value: 30 },\r\n    ];\r\n    const reformattedArray = values.map(({ name, value }) => ({ [name]: value }));\r\n     // addUser(values);\r\n\r\n    };\r\n  const handler = (event,type,required,validationType) => {\r\n    if(event){\r\n      if(type==='onBlur'){\r\n        event.persist();\r\n        Validate(event.target.value,event.target.name,validationType,required);\r\n      }else if(type===\"onChange\"){\r\n        event.persist()\r\n        Validate(event.target.value,event.target.name,validationType,required);\r\n        values.push({\"name\":event.target.name,\"value\":event.target.value,\"required\":required});\r\n      }\r\n    }else{\r\n        values.push({\"name\":type,\"value\":\"\"});\r\n    }\r\n    \r\n  };\r\n\r\n  return {\r\n    handler,\r\n    handleSubmit,\r\n    values,\r\n    errors,\r\n  }\r\n};\r\n\r\n\r\nexport default Warning"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}