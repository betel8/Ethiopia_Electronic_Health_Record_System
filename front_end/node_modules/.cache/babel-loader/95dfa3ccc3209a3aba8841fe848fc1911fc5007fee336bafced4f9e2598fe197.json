{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nconst Warning = data => {\n  _s();\n  const intergratedValue = data.map(value => {\n    return {\n      ...value,\n      \"error\": \"\"\n    };\n  });\n  let values = [];\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const Validate = (value, name, validationStandard, required) => {\n    if (!value && required) {\n      setErrors({\n        ...errors,\n        [name]: \" is required\"\n      });\n      return;\n    } else {\n      if (validationStandard === \"name\") {\n        var notName = value.match(/\\d+/g);\n        if (notName !== null) {\n          setErrors({\n            errors,\n            [name]: \" can not include a number\"\n          });\n        } else {\n          setErrors({\n            ...errors,\n            [name]: false\n          });\n        }\n      } else if (validationStandard === \"phone\") {\n        var notPhone = value.match(/\\D/g);\n        if (notPhone !== null) {\n          setErrors({\n            errors,\n            [name]: \" can not include character\"\n          });\n        } else {\n          setErrors({\n            ...errors,\n            [name]: false\n          });\n        }\n      } else {\n        setErrors({\n          ...errors,\n          [name]: false\n        });\n      }\n    }\n  };\n  /*const addUser=(user)=>{\r\n    fetch(SERVER_URL+'api/doctors',{\r\n      method:'POST',\r\n      headers:{'Content-Type':'application/json'},\r\n      body: JSON.stringify(user)\r\n    }).then(response=>{\r\n      if(response.ok){\r\n        alert('all ok')\r\n      }else{\r\n        alert('something is worng ')\r\n      }\r\n    }).catch(err=>alert(err))\r\n    }*/\n  const handleSubmit = event => {\n    if (event) event.preventDefault();\n    alert(Array.prototype.indexOf.call(intergratedValue, \"fName\"));\n    // addUser(values);\n  };\n\n  const handler = (event, type, required, validationType) => {\n    if (event) {\n      if (type === 'onBlur') {\n        event.persist();\n        Validate(event.target.value, event.target.name, validationType, required);\n      } else if (type === \"onChange\") {\n        event.persist();\n        Validate(event.target.value, event.target.name, validationType, required);\n        values = values.map(_ref => {\n          let {\n            name,\n            value\n          } = _ref;\n          if (name === event.target.name) {\n            return {\n              \"name\": name,\n              \"value\": event.target.value\n            };\n          } else return {\n            \"name\": name,\n            \"value\": value\n          };\n        });\n      }\n    }\n  };\n  return {\n    handler,\n    handleSubmit,\n    intergratedValue\n  };\n};\n_s(Warning, \"LFuPnDNucUMafFK7d0pEHobxTbU=\");\n_c = Warning;\nexport default Warning;\nvar _c;\n$RefreshReg$(_c, \"Warning\");","map":{"version":3,"names":["useState","useEffect","Warning","data","_s","intergratedValue","map","value","values","errors","setErrors","isSubmitting","setIsSubmitting","Validate","name","validationStandard","required","notName","match","notPhone","handleSubmit","event","preventDefault","alert","Array","prototype","indexOf","call","handler","type","validationType","persist","target","_ref","_c","$RefreshReg$"],"sources":["C:/Ethiopia_Electronic_Health_Record_System/front_end/src/Add_User/warning.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst Warning = (data) => {\r\n  const intergratedValue=data.map((value)=>{\r\n    return({...value,\"error\":\"\"});\r\n  })\r\n  let values=[]\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const  Validate=(value,name,validationStandard,required)=>{\r\n    if(!value&&required){\r\n      setErrors({...errors,[name]:\" is required\"})\r\n      return\r\n    }else{\r\n      if(validationStandard===\"name\"){\r\n          var notName=value.match(/\\d+/g);\r\n          if(notName!==null){\r\n            setErrors({errors,[name]:\" can not include a number\"})\r\n          }else{\r\n            setErrors({...errors,[name]:false})\r\n          }\r\n      }else if(validationStandard===\"phone\"){\r\n          var notPhone=value.match(/\\D/g)\r\n          if(notPhone!==null){\r\n            setErrors({errors,[name]:\" can not include character\"})\r\n          }else{\r\n            setErrors({...errors,[name]:false})\r\n          }\r\n      }else{\r\n        setErrors({...errors,[name]:false})\r\n      }\r\n    }\r\n  };\r\n  /*const addUser=(user)=>{\r\n    fetch(SERVER_URL+'api/doctors',{\r\n      method:'POST',\r\n      headers:{'Content-Type':'application/json'},\r\n      body: JSON.stringify(user)\r\n    }).then(response=>{\r\n      if(response.ok){\r\n        alert('all ok')\r\n      }else{\r\n        alert('something is worng ')\r\n      }\r\n    }).catch(err=>alert(err))\r\n\r\n  }*/\r\n  const handleSubmit = (event) => {\r\n    if (event) event.preventDefault();\r\n      alert(Array.prototype.indexOf.call(intergratedValue,\"fName\"))\r\n     // addUser(values);\r\n\r\n    };\r\n  const handler = (event,type,required,validationType) => {\r\n    if(event){\r\n      if(type==='onBlur'){\r\n        event.persist();\r\n        Validate(event.target.value,event.target.name,validationType,required);\r\n      }else if(type===\"onChange\"){\r\n        event.persist()\r\n        Validate(event.target.value,event.target.name,validationType,required);\r\n        values=values.map(({name,value})=>{\r\n          if(name===event.target.name){\r\n            return({\"name\":name,\"value\":event.target.value});\r\n          }else\r\n            return({\"name\":name,\"value\":value});\r\n        });\r\n      }\r\n    }\r\n    \r\n  };\r\n\r\n  return {\r\n    handler,\r\n    handleSubmit,\r\n    intergratedValue\r\n  }\r\n};\r\n\r\n\r\nexport default Warning"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}