{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nconst Warning = data => {\n  _s();\n  const [errors, setErrors] = useState({});\n  const intergratedValue = data.map(value => {\n    return {\n      ...value,\n      \"error\": errors[value.name]\n    };\n  });\n  const Validate = (value, name, validationStandard, required) => {\n    if (!value && required) {\n      setErrors({\n        ...errors,\n        [name]: \" is required\"\n      });\n      return;\n    } else {\n      if (validationStandard === \"name\") {\n        var notName = value.match(/\\d+/g);\n        if (notName !== null) {\n          setErrors({\n            ...errors,\n            [name]: \" can not include a number\"\n          });\n        } else {\n          setErrors({\n            ...errors,\n            [name]: false\n          });\n        }\n      } else if (validationStandard === \"phone\") {\n        var notPhone = value.match(/\\D/g);\n        if (notPhone !== null) {\n          setErrors({\n            ...errors,\n            [name]: \" can not include character\"\n          });\n        } else {\n          setErrors({\n            ...errors,\n            [name]: false\n          });\n        }\n      } else {\n        setErrors({\n          ...errors,\n          [name]: false\n        });\n      }\n    }\n  };\n  /*const addUser=(user)=>{\r\n    fetch(SERVER_URL+'api/doctors',{\r\n      method:'POST',\r\n      headers:{'Content-Type':'application/json'},\r\n      body: JSON.stringify(user)\r\n    }).then(response=>{\r\n      if(response.ok){\r\n        alert('all ok')\r\n      }else{\r\n        alert('something is worng ')\r\n      }\r\n    }).catch(err=>alert(err))\r\n    }*/\n  const handleSubmit = event => {\n    if (event) event.preventDefault();\n    setErrors({\n      \"fName\": \"king\"\n    });\n    // addUser(values);\n  };\n\n  const handler = (event, type) => {\n    if (type === 'onBlur') {\n      event.persist();\n      intergratedValue.forEach(element => {\n        if (element.name === event.target.name) {\n          Validate(event.target.value, element.name, element.validationType, element.required);\n        }\n      });\n    } else if (type === \"onChange\") {\n      event.persist();\n      intergratedValue.forEach(element => {\n        if (element.name === event.target.name) {\n          element.value = event.target.value;\n          Validate(element.value, element.name, element.validationType, element.required);\n        }\n      });\n    }\n  };\n  return {\n    handler,\n    handleSubmit,\n    intergratedValue\n  };\n};\n_s(Warning, \"o+SUXTQUSJNurFcpxixiLrA9BM0=\");\n_c = Warning;\nexport default Warning;\nvar _c;\n$RefreshReg$(_c, \"Warning\");","map":{"version":3,"names":["useState","Warning","data","_s","errors","setErrors","intergratedValue","map","value","name","Validate","validationStandard","required","notName","match","notPhone","handleSubmit","event","preventDefault","handler","type","persist","forEach","element","target","validationType","_c","$RefreshReg$"],"sources":["C:/Ethiopia_Electronic_Health_Record_System/front_end/src/Add_User/warning.js"],"sourcesContent":["import { useState } from 'react';\r\n\r\nconst Warning = (data) => {\r\n  \r\n  const [errors, setErrors] = useState({});\r\n  const intergratedValue=data.map((value)=>{\r\n    return({...value,\"error\":errors[value.name]});\r\n  })\r\n  const  Validate=(value,name,validationStandard,required)=>{\r\n    if(!value && required){\r\n      setErrors({...errors,[name]:\" is required\"})\r\n      return \r\n    }else{\r\n      if(validationStandard===\"name\"){\r\n          var notName=value.match(/\\d+/g);\r\n          if(notName!==null){\r\n            setErrors({...errors,[name]:\" can not include a number\"})\r\n          }else{\r\n            setErrors({...errors,[name]:false})\r\n          }\r\n      }else if(validationStandard===\"phone\"){\r\n          var notPhone=value.match(/\\D/g)\r\n          if(notPhone!==null){\r\n            setErrors({...errors,[name]:\" can not include character\"})\r\n          }else{\r\n            setErrors({...errors,[name]:false})\r\n          }\r\n      }else{\r\n        setErrors({...errors,[name]:false})\r\n      }\r\n    }\r\n  };\r\n  /*const addUser=(user)=>{\r\n    fetch(SERVER_URL+'api/doctors',{\r\n      method:'POST',\r\n      headers:{'Content-Type':'application/json'},\r\n      body: JSON.stringify(user)\r\n    }).then(response=>{\r\n      if(response.ok){\r\n        alert('all ok')\r\n      }else{\r\n        alert('something is worng ')\r\n      }\r\n    }).catch(err=>alert(err))\r\n\r\n  }*/\r\n  const handleSubmit = (event) => {\r\n    if (event) event.preventDefault();\r\n      setErrors({\"fName\":\"king\"})\r\n     // addUser(values);\r\n\r\n    };\r\n  const handler = (event,type) => {\r\n      if(type==='onBlur'){\r\n        event.persist();\r\n        intergratedValue.forEach(element => {\r\n            if(element.name===event.target.name){\r\n              Validate(event.target.value,element.name,element.validationType,element.required);\r\n            }\r\n        });\r\n\r\n      }else if(type===\"onChange\"){\r\n        event.persist()\r\n        intergratedValue.forEach((element)=>{\r\n          if(element.name===event.target.name){\r\n            element.value=event.target.value;\r\n            Validate(element.value,element.name,element.validationType,element.required);\r\n          }\r\n        })\r\n      }\r\n  };\r\n\r\n  return {\r\n    handler,\r\n    handleSubmit,\r\n    intergratedValue\r\n  }\r\n};\r\n\r\n\r\nexport default Warning"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}