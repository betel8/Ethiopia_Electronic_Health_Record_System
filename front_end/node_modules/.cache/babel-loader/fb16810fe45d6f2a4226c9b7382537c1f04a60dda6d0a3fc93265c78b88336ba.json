{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nconst Warning = callback => {\n  _s();\n  const [values, setValues] = useState();\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const Validate = (value, name, validationStandard, required) => {\n    if (!value && required) {\n      setErrors({\n        ...errors,\n        [name]: \" is required\"\n      });\n      return;\n    } else {\n      if (validationStandard === \"name\") {\n        var notName = value.match(/\\d+/g);\n        if (notName !== null) {\n          setErrors({\n            errors,\n            [name]: \" can not include a number\"\n          });\n        } else {\n          setErrors({\n            ...errors,\n            [name]: false\n          });\n        }\n      } else if (validationStandard === \"phone\") {\n        var notPhone = value.match(/\\D/g);\n        if (notPhone !== null) {\n          setErrors({\n            errors,\n            [name]: \" can not include character\"\n          });\n        } else {\n          setErrors({\n            ...errors,\n            [name]: false\n          });\n        }\n      } else {\n        setErrors({\n          ...errors,\n          [name]: false\n        });\n      }\n    }\n  };\n  /*const addUser=(user)=>{\r\n    fetch(SERVER_URL+'api/doctors',{\r\n      method:'POST',\r\n      headers:{'Content-Type':'application/json'},\r\n      body: JSON.stringify(user)\r\n    }).then(response=>{\r\n      if(response.ok){\r\n        alert('all ok')\r\n      }else{\r\n        alert('something is worng ')\r\n      }\r\n    }).catch(err=>alert(err))\r\n    }*/\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback();\n    }\n  }, [errors]);\n  const handleSubmit = event => {\n    if (event) event.preventDefault();\n\n    // addUser(values);\n  };\n\n  const handler = (event, type, required, validationType) => {\n    if (event) {\n      if (type === 'onBlur') {\n        event.persist();\n        Validate(event.target.value, event.target.name, validationType, required);\n      } else if (type === \"onChange\") {\n        event.persist();\n        Validate(event.target.value, event.target.name, validationType, required);\n        values = values.map(_ref => {\n          let {\n            name,\n            value\n          } = _ref;\n          if (name === event.target.name) {\n            return {\n              \"name\": name,\n              \"value\": event.target.value\n            };\n          } else return {\n            \"name\": name,\n            \"value\": value\n          };\n        });\n      }\n    }\n  };\n  return {\n    handler,\n    handleSubmit,\n    values,\n    errors\n  };\n};\n_s(Warning, \"pU9b7K5O1QFT4hzVYjbPjFcrnEo=\");\n_c = Warning;\nexport default Warning;\nvar _c;\n$RefreshReg$(_c, \"Warning\");","map":{"version":3,"names":["useState","useEffect","Warning","callback","_s","values","setValues","errors","setErrors","isSubmitting","setIsSubmitting","Validate","value","name","validationStandard","required","notName","match","notPhone","Object","keys","length","handleSubmit","event","preventDefault","handler","type","validationType","persist","target","map","_ref","_c","$RefreshReg$"],"sources":["C:/Ethiopia_Electronic_Health_Record_System/front_end/src/Add_User/warning.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst Warning = (callback) => {\r\n\r\n  const [values,setValues]=useState();\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const  Validate=(value,name,validationStandard,required)=>{\r\n    if(!value&&required){\r\n      setErrors({...errors,[name]:\" is required\"})\r\n      return\r\n    }else{\r\n      if(validationStandard===\"name\"){\r\n          var notName=value.match(/\\d+/g);\r\n          if(notName!==null){\r\n            setErrors({errors,[name]:\" can not include a number\"})\r\n          }else{\r\n            setErrors({...errors,[name]:false})\r\n          }\r\n      }else if(validationStandard===\"phone\"){\r\n          var notPhone=value.match(/\\D/g)\r\n          if(notPhone!==null){\r\n            setErrors({errors,[name]:\" can not include character\"})\r\n          }else{\r\n            setErrors({...errors,[name]:false})\r\n          }\r\n      }else{\r\n        setErrors({...errors,[name]:false})\r\n      }\r\n    }\r\n  };\r\n  /*const addUser=(user)=>{\r\n    fetch(SERVER_URL+'api/doctors',{\r\n      method:'POST',\r\n      headers:{'Content-Type':'application/json'},\r\n      body: JSON.stringify(user)\r\n    }).then(response=>{\r\n      if(response.ok){\r\n        alert('all ok')\r\n      }else{\r\n        alert('something is worng ')\r\n      }\r\n    }).catch(err=>alert(err))\r\n\r\n  }*/\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      callback();\r\n    }\r\n  }, [errors]);\r\n\r\n  const handleSubmit = (event) => {\r\n    if (event) event.preventDefault();\r\n\r\n     // addUser(values);\r\n\r\n    };\r\n  const handler = (event,type,required,validationType) => {\r\n    if(event){\r\n      if(type==='onBlur'){\r\n        event.persist();\r\n        Validate(event.target.value,event.target.name,validationType,required);\r\n      }else if(type===\"onChange\"){\r\n        event.persist()\r\n        Validate(event.target.value,event.target.name,validationType,required);\r\n        values=values.map(({name,value})=>{\r\n          if(name===event.target.name){\r\n            return({\"name\":name,\"value\":event.target.value});\r\n          }else\r\n            return({\"name\":name,\"value\":value});\r\n        });\r\n      }\r\n    }\r\n    \r\n  };\r\n\r\n  return {\r\n    handler,\r\n    handleSubmit,\r\n    values,\r\n    errors,\r\n  }\r\n};\r\n\r\n\r\nexport default Warning"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}